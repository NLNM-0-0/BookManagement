<UserControl x:Class="BookManagement.AddExistingBook"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:local="clr-namespace:BookManagement"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="RoundButtonAdd" TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="30" 
                            SnapsToDevicePixels="true">
                            <Grid x:Name="Icon">
                                <fa:ImageAwesome
                                    Visibility="Visible"
                                    x:Name="ActiveIcon"
                                    Icon="Plus"
                                    Margin="10"
                                    Foreground="{StaticResource WhiteColorBrush}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border 
        Background="{StaticResource WhiteColorBrush}" 
        BorderThickness="0" 
        CornerRadius="20" 
        Padding="40" 
        Width="590" 
        Height="auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid
                Grid.Row="0">
                <TextBlock Text="Add a book" HorizontalAlignment="Left" FontSize="{StaticResource FontSize24}"/>
                <Button HorizontalAlignment="Right"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        x:Name="ButtonClose"
                        Margin="0 0 10 0"
                        Height="30"
                        Width="30"
                        Background="Transparent"
                        BorderBrush="{StaticResource NotAvailableColorBrush}"
                        BorderThickness="3">

                    <fa:ImageAwesome
                            x:Name="IconButtonClose"
                            Icon="Close"
                            Opacity="1"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=BorderBrush}"
                            Width="10"
                            Height="10"/>
                </Button>
            </Grid>
            <Grid
                Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox
                    x:Name="titleComboBox"
                    Style="{StaticResource MaterialDesignOutlinedComboBox}"
                    materialDesign:TextFieldAssist.TextFieldCornerRadius="5"
                    IsEditable="True"
                    materialDesign:HintAssist.Hint="Title"
                    SelectedValuePath="Content">
                    <ComboBoxItem Content="Book a"/>
                    <ComboBoxItem Content="Book b"/>
                    <ComboBoxItem Content="Book c"/>
                </ComboBox>
                <Button 
                    x:Name="addButton"
                    Grid.Column="2"
                    Style="{DynamicResource RoundButtonAdd}"
                    Command="{Binding OnAddNewBoook, UpdateSourceTrigger=PropertyChanged}"
                    ToolTip="Can't find the book you need? Add new book in here."/>
            </Grid>
            <TextBox
                x:Name="authorTextBox"
                Grid.Row="4"
                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                materialDesign:HintAssist.Hint="Author"
                Width="auto"
                VerticalAlignment="Center"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                IsEnabled="False">
            </TextBox>
            <TextBox
                x:Name="categoryTextBox"
                Grid.Row="6"
                Style="{StaticResource MaterialDesignOutlinedTextBox}"
                materialDesign:HintAssist.Hint="Category"
                Width="auto"
                VerticalAlignment="Center"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                IsEnabled="False">
            </TextBox>
            <Grid
                Grid.Row="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBox
                    x:Name="amountTextBox"
                    Grid.Column="0"
                    Style="{StaticResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Amount"
                    Width="auto"
                    VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding
                            Path="Amount"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:NumberTextBoxValidation
                                    Min="0"
                                    ValidatesOnTargetUpdated="True"
                                    IsNotCheckFirstTime="False"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox
                    x:Name="priceTextBox"
                    Grid.Column="2"
                    Style="{StaticResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Price"
                    Width="auto"
                    VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding
                            Path="Price"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:NumberTextBoxValidation
                                        IsNotCheckFirstTime="False"
                                        Min="0"
                                        ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
            <Button 
                Grid.Row="10"
                Content="ADD" 
                HorizontalAlignment="Right" 
                Command="{Binding CM}" 
                CommandParameter="{Binding Param}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" SourceName="ConfirmButton">
                        <i:InvokeCommandAction Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Border>
</UserControl>
