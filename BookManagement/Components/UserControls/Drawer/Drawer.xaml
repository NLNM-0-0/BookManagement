<UserControl x:Class="BookManagement.Drawer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:fa= "http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:local="clr-namespace:BookManagement"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <!--Label style-->
        <Style x:Key="font_style" TargetType="Label">
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="FontSize" Value="{StaticResource FontSize18}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger 
                    Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, 
                    Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Toggle button Style-->
        <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <fa:FontAwesome Icon="Bars"  Foreground="White"
                                        FontSize="{StaticResource FontSize34}"
                                        VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="iconItem" TargetType="material:PackIcon">
            <Setter Property="Foreground" Value="white"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BlurBox" TargetType="Grid">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Tg_Btn, Path=IsChecked}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <local:MultiValueConverter x:Key="MultiValueConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=nav_pnl, Path=Width}"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="nav_pnl"
                    HorizontalAlignment="Left"
                    Width="60"
                    Background="{DynamicResource PrimaryHueMidBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <!--// Grid for the Menu Toggle Button //-->
                <Grid Height="90" 
                      Grid.Row="0">
                    <!--// Menu title text //-->
                    <TextBlock 
                        Margin="70,-10,0,0"
                        Text="B U K U"
                        Foreground="white"
                        FontSize="28"
                        Background="Transparent"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                        <!--// Shadow Effect //-->
                        <TextBlock.Effect>
                            <DropShadowEffect  BlurRadius="10"
                                                ShadowDepth="1"
                                                Direction="-90"
                                                Color="White"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <!--// Toggle Button //-->
                    <ToggleButton x:Name="Tg_Btn"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="15,-10,0,0"
                            Height="30"
                            Width="30"
                            BorderThickness="0"
                            Style="{StaticResource tb_style}">
                        <!--// Toggle Button - Checked, Unchecked events //-->
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel">
                                        <DoubleAnimation        
                                            Storyboard.TargetName="nav_pnl"
                                            Storyboard.TargetProperty="Width"
                                            BeginTime="0:0:0"
                                            From="220" To="60"
                                            Duration="0:0:0.15">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel">
                                        <DoubleAnimation
                                            Storyboard.TargetName="nav_pnl"
                                            Storyboard.TargetProperty="Width"
                                            BeginTime="0:0:0"
                                            From="60" To="220"
                                            Duration="0:0:0.15">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                </Grid>

                <!--// ListView with menu list items //-->
                <ListView   x:Name="LV"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ItemsSource="{Binding ButtonItems}"
                            SelectedIndex="{Binding SelectedIndex}"
                            Grid.Row="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding OnChangeScreen}" CommandParameter="{Binding ElementName=LV}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <!--// Listview item's Container style template //-->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd"
                                                Width="220"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="True"
                                                Visibility="{c:Binding IsNotCollapsed, FalseToVisibility=Collapsed}">

                                            <ContentPresenter   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                                                     
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background"
                                                        TargetName="Bd"
                                                        Value="{DynamicResource PrimaryHueLightBrush}"/>
                                                <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="{DynamicResource PrimaryHueLightBrush}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background"
                                                        TargetName="Bd"
                                                        Value="white"/>
                                                <Setter Property="BorderBrush"
                                                        TargetName="Bd"
                                                        Value="white"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <!-- Item Template-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="ButtonContainer" 
                                        Orientation="Horizontal"
                                        Width="220" 
                                        Height="55"
                                        Background="Transparent">
                                <StackPanel.InputBindings>
                                    <MouseBinding   Gesture="LeftClick" 
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:Drawer}}, Path=DataContext.OnButtonClick}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext.Index}"/>
                                </StackPanel.InputBindings>
                                <material:PackIcon  Kind="{Binding Icon}"
                                                    Width="29" 
                                                    Height="29"
                                                    Margin="8, 0, 0, 0"
                                                    VerticalAlignment="Center" 
                                                    Style="{StaticResource iconItem}"/>
                                <Label  x:Name="text" Content="{Binding Text}"
                                        Margin="25,0,0,0"
                                        Style="{StaticResource font_style}"
                                        VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Border x:Name="themeButton"
                        Height="50"
                        Grid.Row="2"
                        SnapsToDevicePixels="True"
                        Background="white"
                        Margin="5 0"
                        Padding="10 0"
                        CornerRadius="25"
                        Cursor="Hand">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <material:PackIcon  x:Name="icon" 
                                            Grid.Column="0"
                                            Kind="ColorLens"
                                            Width="30" 
                                            Height="30"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBlock  x:Name="text" 
                                    Grid.Column="1"
                                    Text="Theme"
                                    Margin="25,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="{StaticResource FontSize18}"
                                    Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </Grid>
                </Border>
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding ElementName=themeButton, Path=IsMouseOver}" Value="True">
                        <i:InvokeCommandAction 
                                Command="{Binding OnThemeMouseOver}"
                                CommandParameter="{Binding ElementName=ThemePopUp}"/>
                    </i:DataTrigger>
                    <i:DataTrigger Binding="{Binding ElementName=themeButton, Path=IsMouseOver}" Value="False">
                        <i:InvokeCommandAction 
                                Command="{Binding OnThemeMouseLeave}"
                                CommandParameter="{Binding ElementName=ThemePopUp}"/>
                    </i:DataTrigger>
                </i:Interaction.Triggers>
            </Grid>
            <Grid Grid.Column="1"
                  Margin="20 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <local:ThemePopUp   x:Name="ThemePopUp" 
                                    Grid.Row="1" 
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
            </Grid>
        </Grid>
        <!--Blur Box-->
        <Grid x:Name="blurBox" 
              Background="{StaticResource BlackColorBrush}" 
              Opacity="0.39"
              Width="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth}"
              Style="{StaticResource BlurBox}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseDown" SourceName="blurBox">
                    <i:ChangePropertyAction TargetName="Tg_Btn" PropertyName="IsChecked" Value="False"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>
    </Grid>
</UserControl>
